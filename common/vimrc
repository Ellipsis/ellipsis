set nocompatible
filetype indent plugin on | syntax on

let options = {
    \ 'addons': [
        \ 'github:zeekay/vice-beautify',
        \ 'github:zeekay/vice-colorful',
        \ 'github:zeekay/vice-ctrlp',
        \ 'github:zeekay/vice-delimitmate',
        \ 'github:zeekay/vice-git',
        \ 'github:zeekay/vice-neocompletion',
        \ 'github:zeekay/vice-nerdtree',
        \ 'github:zeekay/vice-polyglot',
        \ 'github:zeekay/vice-powerline',
        \ 'github:zeekay/vice-standard-issue',
        \ 'github:zeekay/vice-syntastic',
        \ 'github:zeekay/vice-tagbar',
        \ 'github:zeekay/vice-undo',
        \ 'github:zeekay/vim-cake',
        \ 'github:nathanaelkane/vim-indent-guides',
    \ ],
    \ 'ft_addons': {
    \ },
    \ 'commands': {
        \ 'Sum': ['github:zeekay/visSum.vim'],
    \ },
    \ 'neocompletion': {'enable_jscomplete': 1, 'enable_necoghc': 1, 'enable_clang_complete': 1},
\ }

if has('mac') && version > 702
   let options.addons += ['github:Shougo/vimproc', 'github:Shougo/vimshell']
endif

if has('python')
    let options.ft_addons['python'] = ['github:zeekay/vim-python']
endif

let &rtp.=','.expand('~/.vim/addons/vice')
call vice#Initialize(options)

nnoremap ; :
vnoremap ; :

" Prevent cursor from moving when leavng insert mode
inoremap <Esc> <Esc>`^

map <leader>q :q<cr>
nnoremap J <c-d>
nnoremap K <c-u>
vnoremap J <c-d>
vnoremap K <c-u>
nnoremap Q ZQ
inoremap <c-u> <c-o>dd
nnoremap <F1> :ColorNext<cr>
nnoremap <F2> :ColorPrev<cr>

cabbrev ack <c-r>=(getcmdtype()==':' && getcmdpos()==1 ? 'Ack' : 'ack')<CR>
cabbrev shell <c-r>=(getcmdtype()==':' && getcmdpos()==1 ? 'VimShell' : 'shell')<CR>
cabbrev shelli <c-r>=(getcmdtype()==':' && getcmdpos()==1 ? 'VimShellInteractive' : 'shell')<CR>

au FileType javascript command! Uglify silent! :%!uglifyjs

let g:indent_guides_guide_size = 1
let g:indent_guides_start_level = 2

if has('gui_running')
    color minimal
    hi Normal guifg=#fcffe0 guibg=#3b3933
else
    " color Tomorrow-Night-Eighties
    color hybrid

    let g:indent_guides_auto_colors = 0
    hi IndentGuidesOdd  ctermbg=236
    hi IndentGuidesEven ctermbg=236
    hi Normal ctermbg=235
    set nolazyredraw
    set ttyfast
endif

hi link coffeeFunction Function
hi link coffeeMethod Function
hi link coffeeObjAssign Statement

" au FileType * nnoremap <buffer><leader>t :!cake test<cr>
au FileType haskell nnoremap <buffer> <F1> :HdevtoolsType<CR>
au FileType haskell nnoremap <buffer> <silent> <F2> :HdevtoolsClear<CR>

function! AddSubtract(char, back)
  let pattern = &nrformats =~ 'alpha' ? '[[:alpha:][:digit:]]' : '[[:digit:]]'
  call search(pattern, 'cw' . a:back)
  execute 'normal! ' . v:count1 . a:char
  silent! call repeat#set(":\<C-u>call AddSubtract('" .a:char. "', '" .a:back. "')\<CR>")
  execute 'w'
endfunction

func! s:BebopReload()
    nnoremap <silent> <C-a> :<C-u>call AddSubtract("\<C-a>", '')<CR>
    nnoremap <silent> <C-x> :<C-u>call AddSubtract("\<C-x>", '')<CR>
    au InsertLeave * :w!
endf

au FileType stylus call s:BebopReload()

" au VimEnter * RainbowParenthesesToggle
" au Syntax * RainbowParenthesesLoadRound
" au Syntax * RainbowParenthesesLoadSquare
" au Syntax * RainbowParenthesesLoadBraces

" let g:rbpt_colorpairs = [
"     \ ['brown',       'RoyalBlue3'],
"     \ ['Darkblue',    'SeaGreen3'],
"     \ ['darkgray',    'DarkOrchid3'],
"     \ ['darkgreen',   'firebrick3'],
"     \ ['darkcyan',    'RoyalBlue3'],
"     \ ['darkred',     'SeaGreen3'],
"     \ ['darkmagenta', 'DarkOrchid3'],
"     \ ['brown',       'firebrick3'],
"     \ ['gray',        'RoyalBlue3'],
"     \ ['black',       'SeaGreen3'],
"     \ ['darkmagenta', 'DarkOrchid3'],
"     \ ['Darkblue',    'firebrick3'],
"     \ ['darkgreen',   'RoyalBlue3'],
"     \ ['darkcyan',    'SeaGreen3'],
"     \ ['darkred',     'DarkOrchid3'],
"     \ ['red',         'firebrick3'],
"     \ ]
